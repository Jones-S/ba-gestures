{"version":3,"file":"main.css","sources":["main.scss","../bower_components/include-media/dist/_include-media.scss","_reset.scss","_typography.scss","_tables.scss","_navigation.scss","_general.scss","_footer.scss"],"sourcesContent":["// var definitions\n$width-content:         96.0rem;     // 960px\n\n\n// media query break points\n// $big-tablet-width:      1024px;\n// $tablet-width:          768px;\n// $phone-width:           420px;\n\n$breakpoints: (phone: 320px, phablet: 567px, tablet: 868px, big-tablet: 1024px, desktop: 1400px);\n\n\n// colors\n$clr-1:           #fff;\n$clr-2:           #979797;\n$clr-quiet:       #E8EBEB;\n// $clr-loud:        #(hex for a loudColor);\n\n$font-family-base:          'Work Sans', sans-serif;\n\n\n// 16px (default) * 0.625 = 10px        -> base 10 to calc easier\n// to make something 50px wide use 5.0rem.\n$font-size-base:            62.5%;\n$baseline-grid-unit:        0.6rem; // = 6px is one unit of the baseline grid\n$size-gutter:               2.0rem; // margin left and right of the document\n\n// mixins\n\n\n@import \"../bower_components/include-media/dist/include-media\";\n\n// import stylesheets\n@import \"reset\";\n@import \"typography\";\n@import \"tables\";\n@import \"navigation\";\n@import \"general\";\n@import \"footer\";\n","@charset 'UTF-8';\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.4\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if log('..') {}` or `$_: log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if log(..) {}` instead.\n  $_: log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if log(..) {}` instead.\n    $_: log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@charset \"UTF-8\";\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n// only parts of eric meyers reset\n\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}","html, body {\n    font-family: $font-family-base;\n    text-transform: none;\n    font-size: $font-size-base;    //10px\n    line-height: 2.4rem; //24px = baseline grid\n\n    // ligatures and kerning\n    -webkit-font-kerning:   normal;\n    -moz-font-kerning:      normal;\n    font-kerning:           normal;\n    -webkit-font-feature-settings:      \"liga\";\n    -moz-font-feature-settings:         \"liga\", \"kern\";\n    font-feature-settings:              \"liga\", \"kern\";\n\n}\n\n\n// http://thesassway.com/advanced/modular-css-typography\n// https://drewish.com/tools/vertical-rhythm/\n// define classes which can then be applied to the elements (modularity!)\n.h1, .h2, .h3, .h4, .h5, .h6 {\n    font-family: $font-family-base;\n    font-weight: 500;\n    color: $clr-1;\n}\n\n.h1 {\n    font-size: 5.0rem;\n    font-weight: 500;\n    line-height: 5.4rem;\n    margin-top: 2.2rem;\n    margin-bottom: 2.0rem;\n\n    @include media(\">phablet\") {\n        font-size: 2.5rem;\n    }\n}\n\n.h2, .h3 {\n    font-size: 2.4rem;\n    font-weight: 500;\n    line-height: 3.2rem;\n    margin-top: 2.4rem;\n    margin-bottom: 1.6rem;\n}\n.h4 {\n    font-size: 2.0rem;\n    font-weight: 500;\n    line-height: 1.4em;\n    margin-top: 1.8rem;\n    margin-bottom: 1.64em;\n}\n\n\n// .h4 { font-size: 110%; }\n// .h5 { font-size: 100%; }\n\n// if necessary to mark text\n.quiet { color: $clr-quiet; }\n// .loud  { color: $clr-loud; }\n\n.italic { font-style: italic; }\n.bold   { font-weight: 700; }\n\n\n\ni, em { @extend .italic; }\nb, strong { @extend .bold; }\n\nh1, .h1 { @extend .h1; }\nh2, .h2 { @extend .h2; }\nh3, .h3 { @extend .h3; }\nh4, .h4 { @extend .h4; }\n\n\n\na {\n    color: #000;\n    text-decoration: none;\n    &:hover {\n        color: $clr-2;\n    }\n}\n\np {\n    // hyphenation\n    -webkit-hyphens: auto;\n       -moz-hyphens: auto;\n        -ms-hyphens: auto;\n            hyphens: auto;\n\n    font-size: 1.8rem; //18px\n    line-height: 2.4rem; // 1em = $base-font-size, because html/body font-size = $base-font-size -> 1.3333 = 24px\n    margin-top: 2.4rem;\n    margin-bottom: 2.4rem;\n    // http://webtypography.net/2.1.2 -> 33em for article with – in german 40em!\n    // our site has a smaller paragraph width\n    max-width: 30em;\n}\n\n.vertical-text {\n    display: inline-block;\n    -webkit-transform: rotate(-90deg);\n       -moz-transform: rotate(-90deg);\n        -ms-transform: rotate(-90deg);\n         -o-transform: rotate(-90deg);\n            transform: rotate(-90deg);\n\n    /* also accepts left, right, top, bottom coordinates; not required, but a good idea for styling */\n    -webkit-transform-origin: 48% 70%;\n       -moz-transform-origin: 48% 70%;\n        -ms-transform-origin: 48% 70%;\n         -o-transform-origin: 48% 70%;\n            transform-origin: 48% 70%;\n}\n\n.header__description p {\n    color: white;\n    margin: 0;\n}\n\n.object__title { // h2\n    font-size: 14.0rem;\n    text-shadow: 0 0 4.0rem rgba(0, 0, 0, 0.7);\n}\n\n.invisible { display: none; }\n","table {\n    border-collapse: separate;\n    border-spacing: 0;\n}\n","nav {\n\n}\n","html {\n\n}\n\nbody {\n\n}\n\n//clearfix for floating elements -> http://css-tricks.com/all-about-floats/\n.clearfix:after {\n  content: \" \";\n  visibility: hidden;\n  display: block;\n  height: 0px;\n  clear: both;\n  font-size: 0;\n}\n\n/* apply a natural box layout model to all elements, but allowing components to change */\nhtml {\n    box-sizing: border-box;\n}\n*, *:before, *:after {\n    box-sizing: inherit;\n}\n\n\n// distance to previous elements\n.dist-to-prev-base      { margin-top: $baseline-grid-unit; }// 6px = 1 unit of baseline grid\n.dist-to-prev-double    { margin-top: 2 * $baseline-grid-unit; } // 12px = 2 units of baseline grid\n.dist-to-prev-triple    { margin-top: 3 * $baseline-grid-unit; }\n.dist-to-prev-quad      { margin-top: 4 * $baseline-grid-unit; }\n// distance to following element\n.dist-to-next-base      { margin-bottom: $baseline-grid-unit; }\n.dist-to-next-double    { margin-bottom: 2 * $baseline-grid-unit; }\n.dist-to-next-triple    { margin-bottom: 3 * $baseline-grid-unit; }\n.dist-to-next-quad      { margin-bottom: 4 * $baseline-grid-unit; }\n\n\n.container {\n    width: 80%;\n    margin: 0 auto;\n}\n\nheader {\n    background-color: #1F1F1F;\n    padding: $size-gutter;\n}\n\n.header__logo-cont {\n    margin: 0;\n    width: 10.0rem;\n    float: left;\n}\n\n.header__description {\n    float: right;\n    max-width: 33%;\n    size: 2.0rem;\n    margin: 0;\n}\n\n.object {\n    background-color: #000;\n    min-height: 60.0rem;\n    background-size: auto 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n    display: flex;\n    justify-content: center;\n    align-items: stretch;\n    border: none;\n    -webkit-transition: background-size 0.35s;\n       -moz-transition: background-size 0.35s;\n        -ms-transition: background-size 0.35s;\n         -o-transition: background-size 0.35s;\n            transition: background-size 0.35s;\n    &:hover {\n        background-size: auto 110%;\n    }\n}\n\n.object-radio {\n    background-image: url(../img/radio@1x.jpg);\n\n    @media\n    only screen and (-webkit-min-device-pixel-ratio: 2),\n    only screen and (   min--moz-device-pixel-ratio: 2),\n    only screen and (     -o-min-device-pixel-ratio: 2/1),\n    only screen and (        min-device-pixel-ratio: 2),\n    only screen and (                min-resolution: 192dpi),\n    only screen and (                min-resolution: 2dppx) {\n        background-image: url(../img/radio@2x.jpg);\n    }\n}\n\n.object-ventilator {\n    background-image: url(../img/ventilator@1x.jpg);\n}\n\n.object-lamp {\n    background-image: url(../img/lamp@1x.jpg);\n}\n\n\n.object__link {\n    display: flex;\n    flex: 1 100%;\n    justify-content: center;\n    align-items: center;\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.4);\n    }\n}\n\n\n\n","footer {\n}\n"],"mappings":"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","names":[],"sourceRoot":"/source/"}